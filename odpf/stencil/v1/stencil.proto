syntax = "proto3";
package odpf.stencil.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "github.com/odpf/stencil/server/api/v1/pb";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		version: "0.1.3";
	};
	external_docs: {
		description: "Stencil server";
	}
	schemes: HTTP;
};

message Snapshot {
	int64 id = 1;
	string namespace = 2 [(google.api.field_behavior) = REQUIRED];
	string name = 3;
	string version = 4;
	bool latest = 5;
}

message DownloadDescriptorRequest {
	string namespace = 1 [(google.api.field_behavior) = REQUIRED];
	string name = 2 [(google.api.field_behavior) = REQUIRED];
	string version = 3 [(google.api.field_behavior) = REQUIRED];
	repeated string fullnames = 4;
}

message DownloadDescriptorResponse {
	bytes data = 1;
}

message UploadDescriptorRequest {
	string namespace = 1 [(google.api.field_behavior) = REQUIRED];
	string name = 2 [(google.api.field_behavior) = REQUIRED];
	string version = 3 [(google.api.field_behavior) = REQUIRED];
	bytes data = 4 [(google.api.field_behavior) = REQUIRED];
	bool latest = 5;
	bool dryrun = 6;
	repeated string skiprules = 7;
}

message UploadDescriptorResponse {
	bool success = 1;
	bool dryrun = 2;
	string errors = 3;
}

message ListSnapshotsResponse {
	repeated Snapshot snapshots = 1;
}

message ListSnapshotsRequest {
	string namespace = 1;
	string name = 2;
	string version = 3;
	bool latest = 4;
}

message PromoteSnapshotRequest {
	int64 id = 1;
}

service StencilService {
	rpc UploadDescriptor (UploadDescriptorRequest) returns (UploadDescriptorResponse) {}
	rpc DownloadDescriptor (DownloadDescriptorRequest) returns (DownloadDescriptorResponse) {}
	rpc ListSnapshots(ListSnapshotsRequest) returns (ListSnapshotsResponse) {
		option (google.api.http) = {
			get: "/v1/snapshots"
		};
	}
	rpc PromoteSnapshot(PromoteSnapshotRequest) returns (Snapshot) {
		option (google.api.http) = {
			patch: "/v1/snapshots/{id}:promote"
		};
	}
}
