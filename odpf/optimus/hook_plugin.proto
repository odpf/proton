syntax = "proto3";
package odpf.optimus;

option go_package = "github.com/odpf/proton/optimus";
option java_multiple_files = true;
option java_package = "io.odpf.proton.optimus";
option java_outer_classname = "HookPluginManager";

import "odpf/optimus/task_plugin.proto";

// HookPlugin must be implemented on a GRPC server for plugins
service HookPlugin {
    // GetHookSchema provides basic working details for this hook
    rpc GetHookSchema(GetHookSchema.Request) returns (GetHookSchema.Response);

    // GetHookQuestions list down all the cli inputs required to generate spec files
    // name used for question will be directly mapped to DefaultHookConfig() parameters
    rpc GetHookQuestions(GetHookQuestions.Request) returns (GetHookQuestions.Response);
    rpc ValidateHookQuestion(ValidateHookQuestion.Request) returns (ValidateHookQuestion.Response);


    // DefaultHookConfig are a set of configuration which will be embedded in job
    // specification. These configs can be requested by the docker container before
    // execution
    // It will be generated based on results of GetHookQuestions, it also inherit
    // its parent task config
    // if DryRun is true in PluginOptions, should not throw error for missing inputs
    rpc DefaultHookConfig(DefaultHookConfig.Request) returns (DefaultHookConfig.Response);
    // DefaultHookAssets are a set of files which will be embedded in job
    // specification in assets folder. These configs can be requested by the
    // docker container before execution.
    // if DryRun is true in PluginOptions, should not throw error for missing inputs
    rpc DefaultHookAssets(DefaultHookAssets.Request) returns (DefaultHookAssets.Response);
}

message GetHookSchema {
    message Request {}
    message Response {
        string name = 1;
        string description = 2;
        string image = 3;
        string type = 4;
        repeated string depends_on = 5;

        // will be mounted inside the container as volume
        string secret_path = 6;
    }
}

message GetHookQuestions {
    message Request {
        string job_name = 1;
        PluginOptions options = 40;
    }
    message Response {
        repeated PluginQuestion questions = 1;
    }
}

message ValidateHookQuestion {
    message Request {
        PluginAnswer answer = 1;

        PluginOptions options = 40;
    }
    message Response {
        bool success = 1;
        string error = 2;
    }
}

message HookConfigs {
    message Config {
        string name = 1;
        string value = 2;
    }
    repeated Config configs = 1;
}

message DefaultHookConfig {
    message Request {
        repeated PluginAnswer answers = 1;
        TaskConfigs task_configs = 2;

        PluginOptions options = 40;
    }
    message Response {
        HookConfigs config = 1;
    }
}

message HookAssets {
    message Asset{
        string name = 1;
        string value = 2;
    }
    repeated Asset assets = 1;
}

message DefaultHookAssets {
    message Request {
        repeated PluginAnswer answers = 1;
        TaskConfigs task_configs = 2;

        PluginOptions options = 40;
    }
    message Response {
        HookAssets assets = 1;
    }
}