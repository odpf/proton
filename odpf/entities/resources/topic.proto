syntax = "proto3";

package odpf.entities.resources;

option java_package = "io.odpf.entities.resources";
option java_outer_classname = "TopicProto";
option go_package = "github.com/odpf/proton/entities/resources";

import "odpf/entities/facets/schema.proto";
import "odpf/entities/facets/ownership.proto";
import "odpf/entities/facets/lineage.proto";
import "odpf/entities/facets/properties.proto";

import "odpf/entities/common/timestamp.proto";
import "odpf/entities/common/event.proto";

// Topic is resource that represents a logical group of messages.
message Topic {
  // Required. The URN of the topic.
  // For example, "urn:odpf:topic:my-topic".
  string urn = 1;
  // Required. The name of the topic.
  // For example, "My Topic".
  string name = 2;
  // Optional. The source of the topic.
  // For example, "kafka", "pubsub".
  string source = 3;
  // Optional. The description of the topic.
  // For example, "This is a topic for my application."
  string description = 4;
  // Optional. The metrics of the topic.
  // For an example check out topic profile schema.
  TopicProfile profile = 21;
  // Optional. The schama of the topic.
  // For an example check out topic schema.
  odpf.entities.facets.TopicSchema schema = 31;
  // Optional. The ownership of the topic.
  // For an example check out ownership.
  odpf.entities.facets.Ownership ownership = 32;
  // Optional. The lineage of the topic.
  // For an example check out lineage schema.
  odpf.entities.facets.Lineage lineage = 33;
  // Optional. List of the user's custom properties.
  // Properties facet can be used to set custom properties, tags and labels for a user.
  // Properties are defined in the properties schema.
  odpf.entities.facets.Properties properties = 34;
  // Optional. The timestamp of the user's creation.
  // Timstamp facet can be used to set the creation and updation timestamp of a user.
  // Timestamps are defined in the timestamp schema.
  odpf.entities.common.Timestamp timestamps = 35;
  // Optional. The timestamp of the generated event.
  // Event schemas is defined in the common event schema.
  odpf.entities.common.Event event = 100;
}

// TopicProfile is the profile of the topic.
message TopicProfile {
  // Optional. The thrroughput of the topic.
  // For example: "1m/minute".
  string throughput = 1;
  // Optional. The number of partitions in the topic.
  // For example: 12.
  int64 number_of_partitions = 2;
}
