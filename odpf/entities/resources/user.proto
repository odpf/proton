syntax = "proto3";

package odpf.entities.resources;

option java_package = "io.odpf.entities.resources";
option java_outer_classname = "UserProto";
option go_package = "github.com/odpf/proton/entities/resources";


import "odpf/entities/common/timestamp.proto";
import "odpf/entities/common/event.proto";

import "odpf/entities/facets/properties.proto";

// User is a person who uses or operates something. 
// It can be a user of the system, or a user of a device.
// User is a resource that represents a user.
message User {
  // Required. The unique identifier of the user
  // For example "user:jdoe"
  string urn = 1;
  // Optional. The source of the user account. 
  // For example "github"
  string source = 2;
  // Required. The emai address of the user.
  // For example "job.deo@gmail.com"
  string email = 3;
  // Required. The username of the user.
  // For example "johndoe"
  string username = 4;
  // Optional. The first name of the user.
  // For example "john"
  string first_name = 5;
  // Optional. The last name of the user.
  // For example "doe"
  string last_name = 6;
  // Optional. The full name of the user.
  // For example "john mayer doe"
  string full_name = 7;
  // Optional. The display name of the user.
  // For example "John M. Doe"
  string display_name = 8;
  // Optional. The job title of the user,
  // For example "data engineer"
  string title = 9;
  // Required. The status of the user.
  // For example "true"
  bool is_active = 10;
  // Optional. The email of the manger of the user.
  // For example "rambo.ryan@gmail.com"
  string manager_email = 11;
  // Optional. List of the user social media accounts.
  // For an example check out the profile schema.
  repeated Profile profiles = 21;
  // Optional. List of the groups user belongs to.
  // A user can be part of multiple groups and have a different role in every group.
  // For an example check out the membership schema.
  repeated Membership memberships = 22;
  // Optional. List of the user's custom properties.
  // Properties facet can be used to set custom properties, tags and labels for a user.
  // Properties are defined in the properties schema.
  odpf.entities.facets.Properties properties = 31;
  // Optional. The timestamp of the user's creation.
  // Timstamp facet can be used to set the creation and updation timestamp of a user.
  // Timestamps are defined in the timestamp schema.
  odpf.entities.common.Timestamp timestamps = 32;
  // Optional. The timestamp of the generated event.
  // Event schemas is defined in the common event schema.
  odpf.entities.common.Event event = 100;
}

// Membership is a relationship between a user and a group.
message Membership {
  // Required. The unique identifier of the group.
  // For example "group:mygroup"
  string group_urn = 1;
  // Required. The role user has in the group.
  // For example "owner"
  repeated string role = 2;
}

// Profile is a social media account of the user.
message Profile {
  // Required. The unique identifier of the profile.
  // For example "profile:jdoe"
  string id = 1;
  // Required. The type of the profile.
  // For example "github"
  string platform = 2;
  // Required. The url of the profile.
  // For example "http://github.com/jdoe"
  string url = 3;
}
